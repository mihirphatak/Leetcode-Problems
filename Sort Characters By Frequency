class Solution {
    public String frequencySort(String s) {
        HashMap<Character, Integer> chars = new HashMap<>();
        int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
        for(int i=0; i<s.length(); i++) {
            chars.put(s.charAt(i), chars.getOrDefault(s.charAt(i),0)+1);
            max = Math.max(max, chars.get(s.charAt(i)));
            min = Math.min(min, chars.get(s.charAt(i)));
        }
        if(max == 1 && min == 1) {
            return s;
        }
        StringBuffer sb = new StringBuffer();
        for(int i=max; i>=min; i--) {
            for(Map.Entry<Character,Integer> e: chars.entrySet()) {
                int n=e.getValue();
                if(n==i){
                    while(n>0){
                        sb.append(e.getKey());
                        n--;
                    }
                }
            }
        }
        return sb.toString();
    }
}

// URL - https://leetcode.com/problems/sort-characters-by-frequency/
